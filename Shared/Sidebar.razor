@using Microsoft.JSInterop
@using Radzen.Blazor
@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager

<style>
    li.rz-navigation-item>.rz-navigation-item-wrapper>.rz-navigation-item-link>i.rzi:first-child {
        color: #095696;
        /* Steel Blue */
    }

    li.rz-navigation-item .rz-navigation-item>.rz-navigation-item-wrapper>.rz-navigation-item-link>i.rzi:first-child {
        color: #6c8aba;
        /* Light Steel Blue */
    }
    .rz-panel-menu {
        white-space: nowrap;
        overflow-y: auto;
    }
</style>
<nav class="nav">
    <RadzenPanelMenu Multiple="@multiple">
        <RadzenPanelMenuItem Text=" ระบบ เงินฝาก" Icon="savings">
            <RadzenPanelMenuItem Text="เปิดบัญชี" Path="dept_deposit/dep_reqdepoit" Icon="folder_open"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="ฝากเงิน" Path="dept/deposit" Icon="savings"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="ถอนเงิน/ปิดบัญชี" Path="dept/dep_withdraw" Icon="payments"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="ซิงค์ข้อมูล - EGAT" Path="debt/Infomation_egat" Icon="cloud_sync"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="ทดสอบ" Path="information" Icon="recent_actors"></RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
    </RadzenPanelMenu>
</nav>
@if (isLoading)
{
    <div class="loading-backdrop">
        Loading...
    </div>
}

@code {
    bool multiple = false;
}


@inject NavigationManager NavManager

@code {
    private bool isLoading = false;

    protected override void OnInitialized()
    {
        NavManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        isLoading = true;

        Task.Delay(1000).ContinueWith(_ =>
        {
            isLoading = false;
            StateHasChanged();
        });
    }
}
